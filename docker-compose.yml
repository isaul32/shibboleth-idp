version: "3.9"
   
services:
  idp:
    build: .
    image: shibboleth-idp
    # health: /opt/shibboleth-idp/bin/status.sh -u http://idp.localhost/idp
    # health: ./bin/status.sh -u http://localhost:8080/idp
    volumes:
      - ./shibboleth-idp/conf:/opt/shibboleth-idp/conf
      - ./shibboleth-idp/credentials/secrets.properties:/opt/shibboleth-idp/credentials/secrets.properties
      - ./shibboleth-idp/edit-webapp:/opt/shibboleth-idp/edit-webapp
      - ./shibboleth-idp/messages:/opt/shibboleth-idp/messages
      - ./shibboleth-idp/views:/opt/shibboleth-idp/views
    depends_on:
      - ldap
      - traefik
    healthcheck:
      test: ['CMD', '/opt/shibboleth-idp/bin/status.sh', '-u', 'http://idp.localhost:8080/idp']
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.idp.rule=Host(`idp.localhost`)"
      - "traefik.http.routers.idp.entrypoints=web"
    
  ldap:
    image: bitnami/openldap:2.6
    environment:
      - LDAP_PORT_NUMBER=10389
      - LDAP_ROOT=dc=example,dc=org
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=myServicePassword
      - LDAP_USER_DC=people
      - LDAP_USERS=
      - LDAP_PASSWORDS=
      - LDAP_GROUP=
    ports:
      - '10389:10389'
    volumes:
      - ldap_data:/bitnami/openldap
    depends_on:
      - traefik
    healthcheck:
      test: ['CMD', 'ldapwhoami', '-H', 'ldap://localhost:10389', '-x', '-D', 'cn=admin,dc=example,dc=org', '-w', 'myServicePassword']
      interval: 10s
      timeout: 5s
      retries: 5

  traefik:
    image: "traefik:v2.6"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--ping"
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  ldap_data:
